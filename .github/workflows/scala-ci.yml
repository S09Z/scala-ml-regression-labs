name: Scala CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
#   debug_review_code:
#     runs-on: ubuntu-latest
#     steps:
#       - name: 📥 Checkout Repository
#         uses: actions/checkout@v4

#       - name: 🔧 Install JDK & SBT
#         run: |
#           sudo apt update
#           sudo apt install -y openjdk-17-jdk
#           echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV
#           export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
#           curl -fsSL https://scala.jfrog.io/artifactory/api/gpg/key/public | sudo gpg --dearmor -o /usr/share/keyrings/scala-archive-keyring.gpg
#           echo "deb [signed-by=/usr/share/keyrings/scala-archive-keyring.gpg] https://scala.jfrog.io/artifactory/debian all main" | sudo tee /etc/apt/sources.list.d/scala.list
#           sudo apt update
#           sudo apt install -y sbt

#       - name: 🔍 Check Code Formatting (Scalafmt)
#         run: sbt scalafmtCheckAll

  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🏗️ Setup Java & Scala
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: sbt

      - name: 🔧 Install Apache Spark
        run: |
          wget -qO - https://archive.apache.org/dist/spark/spark-3.5.0/spark-3.5.0-bin-hadoop3.tgz | tar xvz
          sudo mv spark-3.5.0-bin-hadoop3 /usr/local/spark
          echo "SPARK_HOME=/usr/local/spark" >> $GITHUB_ENV
          echo "PATH=$SPARK_HOME/bin:$PATH" >> $GITHUB_ENV

      - name: 🔧 Install SBT
        run: |
          sudo apt update
          sudo apt install -y sbt
          sbt sbtVersion

      - name: 🚀 Cache SBT Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier
          key: sbt-${{ runner.os }}-${{ hashFiles('**/build.sbt') }}
          restore-keys: |
            sbt-${{ runner.os }}-

      - name: 🔄 Update & Compile
        run: sbt update compile

  deploy:
    name: 🚀 Deploy (Docker Build & Push)
    runs-on: ubuntu-latest
    needs: build_and_test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔑 Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🛠️ Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/house-price-prediction:latest .

      - name: 📤 Push Docker Image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/house-price-prediction:latest
